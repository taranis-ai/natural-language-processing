name: Build and Test NLP Bot Package

on:
  push:
    branches:
      - main
    tags:
      - "**"
  workflow_dispatch:
  pull_request:

permissions:
  packages: write
  contents: write
  id-token: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      VENV_PATH: venv/bin/activate
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies from pyproject.toml
        run: |
          python -m venv venv
          source $VENV_PATH
          pip install --upgrade pip
          pip install .[dev]  # Install the development dependencies

      - name: Lint with ruff
        run: |
          source $VENV_PATH
          ruff check --output-format=github .

      - name: Run tests
        run: |
          source $VENV_PATH
          pytest -v

  build_container:
    name: Build Container
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set build env
        run: echo "GHCR_OWNER=${GITHUB_REPOSITORY_OWNER,,}" >>${GITHUB_ENV}

      - name: Build and push container
        uses: docker/build-push-action@v5
        with:
          file: Containerfile  e
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.GHCR_OWNER }}/taranis-nlp-bot:latest
            ghcr.io/${{ env.GHCR_OWNER }}/taranis-nlp-bot:${{ github.ref_name }}
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=true
          cache-from: type=registry,ref=ghcr.io/${{ env.GHCR_OWNER }}/taranis-nlp-bot:latest
          cache-to: type=registry,ref=ghcr.io/${{ env.GHCR_OWNER }}/taranis-nlp-bot:latest,mode=max
